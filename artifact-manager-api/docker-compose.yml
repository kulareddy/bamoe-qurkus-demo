version: '3.8'
name: artifact-manager

services:
  # PostgreSQL Database
  artifact-postgres:
    image: postgres:17-alpine
    container_name: artifact-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-postgres}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ssot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Default service - no profile needed

    # Keycloak Identity Provider
  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: artifact-keycloak
    command: ["start-dev"]
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin123}
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: ${KEYCLOAK_PORT:-9180}
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    ports:
      - "${KEYCLOAK_PORT:-9180}:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    networks:
      - ssot-network
    # Default service - no profile needed

  # Artifact Management API Service
  artifact-management-api:
    build:
      context: .
      dockerfile: src/main/docker/Dockerfile.jvm
    image: artifact-management-api:latest
    container_name: artifact-management-api
    ports:
      - "8080:8080"
    environment:
      # KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      DB_HOST: ${DB_HOST:-artifact-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-kogito}
      DB_USER: ${DB_USER:-kogito}
      DB_PASSWORD: ${DB_PASSWORD:-kogito}
    depends_on:
      # - kafka
      - artifact-postgres
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/api/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ssot-network
    profiles: ["container"]

volumes:
  postgres_data:
    driver: local

networks:
  ssot-network:
    name: ssot-network
    driver: bridge
