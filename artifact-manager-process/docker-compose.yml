version: '3.8'
name: artifact-manager

services:
  # BAMOE Maven Repository
  bamoe-maven-repo:
    image: quay.io/bamoe/maven-repository:9.2.1-ibm-0005
    container_name: bamoe-maven-repository
    ports:
      - "${MAVEN_REPO_PORT}:8080"
    networks:
      - ssot-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    # Default profile - runs without specifying profile

  # PostgreSQL Database
  kogito-postgres:
    image: postgres:17-alpine
    container_name: kogito-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-kogito-db}
      POSTGRES_USER: ${DB_USER:-artifact}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-Ch@ngeme}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ssot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-artifact} -d ${DB_NAME:-kogito-db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Default profile - runs without specifying profile

  # Artifact Manager Process Service
  artifact-management-process:
    build:
      context: .
      dockerfile: src/main/docker/Dockerfile.jvm
    platform: linux/amd64
    container_name: artifact-management-process
    image: artifact-management-process:latest
    ports:
      - "${KOGITO_SERVICE_PORT:-8080}:8080"
    environment:
      # KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KOGITO_JOBS-SERVICE_URL: http://host.docker.internal:${KOGITO_SERVICE_PORT}/
      KOGITO_INDEX-SERVICE_URL: http://host.docker.internal:${KOGITO_SERVICE_PORT}/
      KOGITO_SERVICE_URL: http://host.docker.internal:${KOGITO_SERVICE_PORT}/

      DB_HOST: kogito-postgres
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-kogito-db}
      DB_USER: ${DB_USER:-artifact}
      DB_PASSWORD: ${DB_PASSWORD:-Ch@ngeme}

      OIDC_AUTH_SERVER_URL: http://keycloak:8080/realms/artifact-realm
      OIDC_CLIENT_ID: ${OIDC_CLIENT_ID:-artifact-management-process}
      OIDC_CLIENT_SECRET: ${OIDC_CLIENT_SECRET:-artifact-management-secret}

    depends_on:
      # - kafka
      - kogito-postgres
    networks:
      - ssot-network
    profiles: ["container"]

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: artifact-keycloak
    command: ["start-dev"]
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin123}
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: ${KEYCLOAK_PORT:-8080}
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    ports:
      - "${KEYCLOAK_PORT:-8080}:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    networks:
      - ssot-network
    profiles: ["container"]

  # Process management console
  artifact-management-console:
    container_name: artifact-management-console
    image: quay.io/bamoe/management-console:9.2.1-ibm-0005
    ports:
      - ${MANAGEMENT_CONSOLE_PORT:-8080}:8080
    environment:
      RUNTIME_TOOLS_MANAGEMENT_CONSOLE_OIDC_CLIENT_ID: artifact-management-console
      RUNTIME_TOOLS_MANAGEMENT_CONSOLE_OIDC_AUTH_SERVER_URL: http://keycloak:8080/realms/artifact-realm
      RUNTIME_TOOLS_MANAGEMENT_CONSOLE_OIDC_SCOPE: openid profile email
      RUNTIME_TOOLS_MANAGEMENT_CONSOLE_OIDC_APPLICATION_TYPE: web-app
      RUNTIME_TOOLS_MANAGEMENT_CONSOLE_OIDC_REDIRECT_URI: http://host.docker.internal:8080/
      RUNTIME_TOOLS_MANAGEMENT_CONSOLE_OIDC_LOGOUT_REDIRECT_URI: http://host.docker.internal:8080/
      RUNTIME_TOOLS_MANAGEMENT_CONSOLE_MANAGED_BUSINESS_SERVICES: '[{"name":"artifact-management-process","businessServiceUrl":"http://host.docker.internal:8082","authToken":{"oidc":{"clientId":"${OIDC_CLIENT_ID}","clientSecret":"${OIDC_CLIENT_SECRET}","authServerUrl":"http://keycloak:8080/realms/artifact-realm"}}}]'
    # depends_on:
    #   - keycloak  # Keycloak service not defined yet
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - ssot-network
    profiles: ["container"]

volumes:
  postgres_data:
    driver: local

networks:
  ssot-network:
    name: ssot-network
    driver: bridge
